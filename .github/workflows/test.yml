name: 'build-test'
on:
  push:

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: use node.js
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 16.x

      - run: |
          npm install

      - run: |
          npm run build

      - run: |
          npm run format

      - run: |
          npm run lint

      - run: |
          npm run package

  # make sure the action works on a clean machine without building
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: src
        env:
          PR_URL: https://github.com/lkiesow/matrix-notification/pull
        run: >-
          echo "src=$GITHUB_REF"
          | sed 's_refs/heads/\(.*\)_(branch \1)_'
          | sed "s_refs/pull/\(.*\)/merge$$_($PR_URL/\1)_"
          >> $GITHUB_OUTPUT


      - name: Test sending a message
        uses: ./
        with:
          room: '!gwaqKjZRpCQkpkTVwh:matrix.org'
          message: 'matrix-notification: success ${{ steps.src.outputs.src }}'
          token: ${{ secrets.MATRIX_TOKEN }}

      - name: Test sending a formatted message
        uses: ./
        with:
          room: '!gwaqKjZRpCQkpkTVwh:matrix.org'
          message: 'matrix-notification: success ${{ steps.src.outputs.src }}'
          formatted_message: 'matrix-notification: <b>formatted</b> success ${{ steps.src.outputs.src }}'
          token: ${{ secrets.MATRIX_TOKEN }}

      - name: Test with formatted message only
        uses: ./
        with:
          room: '!gwaqKjZRpCQkpkTVwh:matrix.org'
          formatted_message: 'matrix-notification: <b>formatted</b> success ${{ steps.src.outputs.src }}'
          token: ${{ secrets.MATRIX_TOKEN }}

      - name: Test swtting up matrix-msg
        uses: ./
        with:
          room: '!gwaqKjZRpCQkpkTVwh:matrix.org'
          token: ${{ secrets.MATRIX_TOKEN }}
          tool: true

      - name: Test matrix-msg plain text argument
        run: |
          matrix-msg 'matrix-notification: matrix-msg arg: success ${{ steps.src.outputs.src }}'

      - name: Test matrix-msg with pipe
        run: |
          echo 'matrix-notification: pipe | matrix-msg: success ${{ steps.src.outputs.src }}' | matrix-msg

      - name: Test matrix-msg with formatted body
        run: >
          matrix-msg
          'matrix-notification: matrix-msg formatted-arg: success ${{ steps.src.outputs.src }}'
          'matrix-notification: matrix-msg <b>formatted-arg</b>: success ${{ steps.src.outputs.src }}'
